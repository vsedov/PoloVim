" Note: run PlugUpdate/Install first
set termguicolors
call plug#begin('~/.vim/plugged')
Plug 'neovim/nvim-lspconfig'
Plug 'nvim-treesitter/nvim-treesitter'
" 'ray-x/go.nvim'"
Plug '~/github/go.nvim'
" Plug 'kosayoda/nvim-lightbulb'
Plug 'liuchengxu/vim-clap', { 'do': { -> clap#installer#force_download() } }

call plug#end()

lua <<EOF
log_path = vim.fn.expand("$HOME") .. "/tmp/neovim_debug.log"

lprint = function(...)
  local arg = {...}
  local str = "שׁ "
  local lineinfo = ''

  local info = debug.getinfo(2, "Sl")
  lineinfo = info.short_src .. ":" .. info.currentline
  str = str .. lineinfo

  for i, v in ipairs(arg) do
    if type(v) == "table" then
      str = str .. " |" .. tostring(i) .. ": " .. vim.inspect(v) .. "\n"
    else
      str = str .. " |" .. tostring(i) .. ": " .. tostring(v)
    end
  end
  if #str > 2 then
    if log_path ~= nil and #log_path > 3 then
      local f = io.open(log_path, "a+")
      io.output(f)
      io.write(str .. "\n")
      io.close(f)
    else
      print(str .. "\n")
    end
  end
end

-- require 'go'.setup({
--   goimport = 'gopls', -- if set to 'gopls' will use golsp format
--   gofmt = 'gopls', -- if set to gopls will use golsp format
--   max_line_line = 120,
--   tag_transform = false,
--   test_dir = '',
--   comment_placeholder = '   ',
--   lsp_cfg = true, -- true: lsp in the plugin and apply non-default setup
--   lsp_gofumpt = true, -- true: set default gofmt in gopls format to   gofumpt
--   lsp_codelens = true,
--   lsp_on_attach = true, -- use on_attach from go.nvim
--   dap_debug = true,
-- })

local protocol = require'vim.lsp.protocol'




EOF

set mouse=a